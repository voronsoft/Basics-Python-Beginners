# en - Fragments of prepared code for tasks
# ru - Фрагменты подготовленного кода для задач
code_tasks = {
    "task_10_3_2.py": """import random
# установка "зерна" датчика случайных чисел, чтобы получались одни и те же случайные величины
random.seed(1)

# здесь продолжайте программу\n""",
    "task_10_3_3.py": """import random
# установка "зерна" датчика случайных чисел, чтобы получались одни и те же случайные величины
random.seed(1)

# здесь продолжайте программу""",
    "task_10_3_4.py": """import random
# установка "зерна" датчика случайных чисел, чтобы получались одни и те же случайные величины
random.seed(1)

# здесь продолжайте программу\n""",
    "task_10_3_5.py": """import sys
import random
# установка "зерна" датчика случайных чисел, чтобы получались одни и те же случайные величины
random.seed(1)

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу\n""",
    "task_10_3_6.py": """import random
# установка "зерна" датчика случайных чисел, чтобы получались одни и те же случайные величины
random.seed(1)

# здесь продолжайте программу\n""",
    "task_10_3_7.py": """import random
# установка "зерна" датчика случайных чисел, чтобы получались одни и те же случайные величины
random.seed(1)
# начальная инициализация поля (переменные P и N не менять, единицы записывать в список P)
N = int(input())
P = [[0] * N for i in range(N)]

# здесь продолжайте программу\n""",
    "task_10_4_5.py": """cmd = input()  # не изменять\n""",
    "task_10_4_6.py": """def get_data(value):
    match value:
        # здесь продолжайте программу

    return None\n""",
    "task_10_4_7.py": """def get_data(value):
    match value:
        # здесь продолжайте программу

    return None\n""",
    "task_10_5_4.py": """t = (int, str, str, float, int)
book = [t[i](x) if t[i] != str else x.strip() for i, x in enumerate(input().split(","))]\n""",
    "task_10_5_5.py": """t = (int, str, str, float, int)
book = [t[i](x) if t[i] != str else x.strip() for i, x in enumerate(input().split(","))]\n""",
    "task_10_6_4.py": """def parse_json(data):
    match data:
        # здесь прописывайте шаблон

        case {'id': ids, 'data': [_, {'login': login}, _, _]}:
            return ids, login

    return None

json_data = {'id': 2, 'access': False, 'data': ['26.05.2023', {'login': '1234', 'email': 'xxx@mail.com'}, 2000, 56.4]}\n""",
    "task_10_6_5.py": """def parse_json(data):
    match data:
        # здесь прописывайте шаблон

        case {'id': ids, 'data': [_, {'login': login}, _, _]}:
            return ids, login

    return None

json_data = {'id': 2, 'access': True, 'data': ['26.05.2023', {'login': '1234', 'email': 'xxx@mail.com'}, 2000, 56.4]}\n""",
    "task_2_3_1.py": """# ввод целого числа
d = int(input())

# здесь продолжите программу\n""",
    "task_2_3_2.py": """# ввод целого числа
d1, d2, d3, d4, d5 = map(int, input().split())

# здесь продолжите программу\n""",
    "task_2_3_3.py": """# ввод целого числа
d1, d2, d3, d4, d5 = map(int, input().split())

# здесь продолжите программу\n""",
    "task_2_3_5.py": """# ввод данных
a, b = map(int, input().split())

# здесь продолжите программу\n""",
    "task_2_3_6.py": """# ввод данных
n, k = map(int, input().split())

# здесь продолжите программу\n""",
    "task_2_3_7.py": """# ввод данных
n, m = map(int, input().split())

# здесь продолжите программу\n""",
    "task_2_3_8.py": """# Вставьте этот код в консоль и дополните исходя из задания
# ввод данных
x = int(input())

# здесь продолжите программу\n""",
    "task_2_4_4.py": """# ввод данных
s1, s2 = map(str.strip, input().split())

# здесь продолжите программу\n""",
    "task_3_6_7.py": """marks = list(map(int, input().split()))

# здесь продолжайте программу\n""",
    "task_3_9_6.py": """t = [["Скажи-ка", "дядя", "ведь", "не", "даром"],
     ["Я", "Python", "выучил", "с", "каналом"],
     ["Балакирев", "что", "раздавал?"]]

# здесь продолжайте программу\n""",
"task_4_2_1.py": """m = '''1. Введение в Python
2. Строки и списки
3. Условные операторы
4. Циклы
5. Словари, кортежи и множества
6. Выход'''""",
    "task_5_2_9.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_5_6_2.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_5_6_4.py": """import sys

# считывание списка из входного потока
s = sys.stdin.readlines()
lst_in = [list(map(int, x.strip().split())) for x in s]

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_5_6_5.py": """import sys

# считывание списка из входного потока
s = sys.stdin.readlines()
lst_in = [list(map(int, x.strip().split())) for x in s]

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_5_9_1.py": """import sys

# считывание списка из входного потока
s = sys.stdin.readlines()
lst_in = [list(map(int, x.strip().split())) for x in s]

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_5_9_4.py": """import sys

# считывание списка из входного потока
s = sys.stdin.readlines()
lst_in = [list(map(int, x.strip().split())) for x in s]

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_6_1_10.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_6_1_4.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_6_1_8.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_6_2_6.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_6_3_10.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_6_4_6.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_6_4_7.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_6_6_3.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_6_6_6.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_7_11_2.py": """menu = input() # чтение пунктов меню (переменную menu не менять)\n""",
    "task_7_11_5.py": """t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}

# здесь продолжайте программу\n""",
    "task_7_12_3.py": """t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}

# здесь продолжайте программу\n""",
    "task_7_12_4.py": """from functools import wraps

# здесь продолжайте программу\n""",
    "task_7_4_4.py": """t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
    'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
    'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}

# здесь продолжайте программу\n""",
    "task_7_5_5.py": """import sys

# здесь объявляйте функцию


lines = sys.stdin.readlines() # чтение строк из входного потока (переменную lines не менять)

# здесь продолжайте программу по формированию двумерного списка lst2D\n""",
    "task_7_6_7.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

menu = {'Главная': 'home', 'Архив': 'archive', 'Новости': 'news'}
# здесь продолжайте программу (используйте список lst_in и menu)\n""",
    "task_7_7_2.py": """# считывание числа N
N = int(input())

#здесь продолжайте программу

get_rec_N(N) # вызов рекурсивной функции\n""",
    "task_7_7_4.py": """# ввод числа N
N = int(input())

# здесь задается функция fib_rec (переменную N не менять!)\n""",
    "task_7_7_5.py": """# ввод числа n
n = int(input())

# здесь задается функция fact_rec  (переменную n не менять!)\n""",
    "task_7_7_6.py": """d = [1, 2, [True, False], ["Сидней", "Мельбурн", [100, 101], ['True', [-2, -1]]], 7.89]

# здесь продолжайте программу\n""",
    "task_7_8_2.py": """# Комментарии не удалять !!! Или код не пройдёт тест !!!
# fmt: off
# здесь продолжайте программу\n""",
    "task_7_8_3.py": """# Комментарии не удалять !!! Или код не пройдёт тест !!!
# fmt: off
# здесь продолжайте программу\n""",
    "task_7_8_4.py": """# Комментарии не удалять !!! Или код не пройдёт тест !!!
# fmt: off
# здесь продолжайте программу
x = float(input())\n""",
    "task_7_8_5.py": """# Комментарии не удалять !!! Или код не пройдёт тест !!!
# fmt: off
# здесь продолжайте программу
s = float(input())\n""",
    "task_7_8_6.py": """# Комментарии не удалять !!! Или код не пройдёт тест !!!
# fmt: off
def filter_lst(it, key=None):
    if key is None:
        return tuple(it)

    res = ()
    for x in it:
        if key(x):
            res += (x,)

    return res

# здесь продолжайте программу\n""",
    "task_7_9_3.py": """WIDTH = int(input())


def func1():
    WIDTH += 1
    return WIDTH


print(func1())\n""",
    "task_7_9_4.py": """def func1():
    msg = input()


    def func2():
        msg = input()
        print(msg)


    func2()        
    print(msg)


func1()\n""",
    "task_8_1_4.py": """def factorial(n):
    p = 1
    for i in range(2, n+1):
        p *= i

    print("my factorial")
    return p\n""",
    "task_8_6_2.py": """f = open("abc.txt")
r = f.read(1)
f.close()\n""",
    "task_9_1_2.py": """# ввод значений a и b (переменные a и b не менять!)
a, b = map(int, input().split())

# здесь продолжайте программу\n""",
    "task_9_2_1.py": """# ввод значения N (эту переменную не менять)
N = int(input())

# здесь продолжайте программу\n""",
    "task_9_2_3.py": """import random
from string import ascii_lowercase, ascii_uppercase

# установка зерна датчика случайных чисел (не менять)
random.seed(1)

# здесь продолжайте программу\n""",
    "task_9_3_3.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)
# переменную lst_in не менять!\n""",
    "task_9_3_4.py": """# ввод строки (переменную s не менять)
s = input()
s_lst = s.split()

# здесь продолжайте программу\n""",
    "task_9_3_5.py": """t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}

# здесь продолжайте программу\n""",
    "task_9_4_2.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список lst_in)\n""",
    "task_9_5_2.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список строк lst_in)\n""",
    "task_9_5_3.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список строк lst_in)\n""",
    "task_9_5_5.py": """# считывание строки в переменную s (эту переменную в программе не менять)
s = input()

# здесь продолжайте программу\n""",
    "task_9_6_2.py": """# ввод строки в переменную s (переменную в программе не менять)
s = input()

# здесь продолжайте писать программу\n""",
    "task_9_6_6.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список строк lst_in)\n""",
    "task_9_7_2.py": """import sys

# считывание списка из входного потока
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список строк lst_in)\n""",
    "task_9_7_4.py": """import sys

# считывание списка из входного потока (не меняйте переменную lst_in в программе)
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список строк lst_in)\n""",
    "task_9_7_5.py": """import sys

# считывание списка из входного потока (переменную lst_in не менять)
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список строк lst_in)\n""",
    "task_9_9_5.py": """import sys

# считывание списка из входного потока (переменную lst_in не менять)
lst_in = list(map(str.strip, sys.stdin.readlines()))

# здесь продолжайте программу (используйте список строк lst_in)\n""",
}
